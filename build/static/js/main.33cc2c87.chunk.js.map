{"version":3,"sources":["helpers.js","components/StorePicker.js","components/NotFound.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","NotFound","Header","tagline","proptypes","PropTypes","string","isRequired","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBiding","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.33cc2c87.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\",\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\",\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react'\nimport { getFunName } from '../helpers'\nimport PropTypes from 'prop-types'\n\nclass StorePicker extends React.Component {\n    myInput = React.createRef()\n    static propTypes = {\n        history: PropTypes.object,\n    }\n\n    goToStore = (event) => {\n        // 1. Stop the form from Submitting;\n        event.preventDefault()\n        // 2. get the text from that input\n        const storeName = this.myInput.current.value\n        // 3. Change the page to /store/whatever-they-entered\n        this.props.history.push(`/store/${storeName}`)\n    }\n    render() {\n        return (\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\n                <h2>Please Enter A Store</h2>\n                <input\n                    type=\"text\"\n                    ref={this.myInput}\n                    required\n                    placeholder=\"Store Name\"\n                    defaultValue={getFunName()}\n                />\n                <button type=\"submit\">Visit Store →</button>\n            </form>\n        )\n    }\n}\n\nexport default StorePicker\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found</h2>\n  </div>\n)\n\nexport default NotFound;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Header = (props) => (\n    <header className=\"top\">\n        <h1>\n            Catch\n            <span className=\"ofThe\">\n                <span className=\"of\">Of</span>\n                <span className=\"the\">The</span>\n            </span>\n            Day\n        </h1>\n        <h3 className=\"tagline\">\n            <span>{props.tagline}</span>\n        </h3>\n    </header>\n)\n\nHeader.proptypes = {\n    tagline: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import React from 'react'\nimport { formatPrice } from '../helpers'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport PropTypes from 'prop-types'\n\nclass Order extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func,\n    }\n\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key]\n        const count = this.props.order[key]\n        const isAvailable = fish && fish.status === 'available'\n        const transitionOptions = {\n            classNames: 'order',\n            key,\n            timeout: { enter: 500, exit: 500 },\n        }\n        // make sure the fish is loaded before we continue\n        if (!fish) return null\n\n        if (!isAvailable) {\n            return (\n                <CSSTransition {...transitionOptions}>\n                    <li key={key}>\n                        Sorry {fish ? fish.name : 'fish'} is no longer available\n                    </li>\n                </CSSTransition>\n            )\n        }\n        return (\n            <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                    <span>\n                        <TransitionGroup component=\"span\" className=\"count\">\n                            <CSSTransition {...transitionOptions}>\n                                <span>{count}</span>\n                            </CSSTransition>\n                        </TransitionGroup>\n                        lbs {fish.name}\n                        {formatPrice(count * fish.price)}\n                        <button\n                            onClick={() => {\n                                this.props.removeFromOrder(key)\n                            }}\n                        >\n                            &times;\n                        </button>\n                    </span>\n                </li>\n            </CSSTransition>\n        )\n    }\n    render() {\n        const orderIds = Object.keys(this.props.order)\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key]\n            const count = this.props.order[key]\n            const isAvailable = fish && fish.status === 'available'\n            if (isAvailable) {\n                return prevTotal + count * fish.price\n            }\n            return prevTotal\n        }, 0)\n\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n                <ul>\n                    <li></li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Order\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef()\n    priceRef = React.createRef()\n    statusRef = React.createRef()\n    descRef = React.createRef()\n    imageRef = React.createRef()\n\n    static propTypes = {\n        addFish: PropTypes.func,\n    }\n\n    createFish = (event) => {\n        event.preventDefault()\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value,\n        }\n        this.props.addFish(fish)\n        event.currentTarget.reset()\n    }\n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input\n                    name=\"name\"\n                    ref={this.nameRef}\n                    type=\"text\"\n                    placeholder=\"Name\"\n                />\n                <input\n                    name=\"price\"\n                    ref={this.priceRef}\n                    type=\"text\"\n                    placeholder=\"Price\"\n                />\n                <select name=\"status\" ref={this.statusRef}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n                <input\n                    name=\"image\"\n                    ref={this.imageRef}\n                    type=\"text\"\n                    placeholder=\"Image\"\n                />\n                <button type=\"submit\">+ Add Fish</button>\n            </form>\n        )\n    }\n}\n\nexport default AddFishForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass EditFishForm extends React.Component {\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number,\n        }),\n        index: PropTypes.string,\n        updateFish: PropTypes.func,\n    }\n    handleChange = (event) => {\n        console.log(event.currentTarget.value)\n        // update that fish\n        // 1. Take a copy of the current fish\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value,\n        }\n        this.props.updateFish(this.props.index, updatedFish)\n    }\n    render() {\n        return (\n            <div className=\"fish-edit\">\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.name}\n                />\n                <input\n                    type=\"text\"\n                    name=\"price\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.price}\n                />\n                <select\n                    type=\"text\"\n                    name=\"status\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.status}\n                />\n                <option value=\"available\">Fresh!</option>\n                <option value=\"unavailable\">Sold Out!</option>\n                <textarea\n                    type=\"text\"\n                    name=\"desc\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.desc}\n                />\n                <input\n                    type=\"text\"\n                    name=\"image\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.image}\n                />\n                <button onClick={() => this.props.deleteFish(this.props.index)}>\n                    Remove Fish\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default EditFishForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Invetory Login</h2>\n        <p>Sing in to manage your store's inventory</p>\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>\n            Login with Github\n        </button>\n        <button\n            className=\"facebook\"\n            onClick={() => props.authenticate('Facebook')}\n        >\n            Login with Facebook\n        </button>\n        <button\n            className=\"twitter\"\n            onClick={() => props.authenticate('Twitter')}\n        >\n            Login with Twitter\n        </button>\n    </nav>\n)\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired,\n}\n\nexport default Login\n","import  Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyCIrxuZnRa_G7jlRHXV12RKobIeDmPuJbI\",\n  authDomain: \"catch-of-the-day-carlosht.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-carlosht-default-rtdb.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// this is a named export;\n\nexport { firebaseApp };\n\n// this is a default export;\n\nexport default base;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport firebase from 'firebase'\nimport AddFishForm from './AddFishForm'\nimport EditFishForm from './EditFishForm'\nimport Login from './Login'\nimport base, { firebaseApp } from '../base'\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func,\n        addFish: PropTypes.func,\n    }\n\n    state = {\n        uid: null,\n        owner: null,\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.authHandler({ user })\n            }\n        })\n    }\n\n    authHandler = async (authData) => {\n        // 1. look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, { context: this })\n        console.log(store)\n        // 2. Claim it if there is no owner\n        if (!store.owner) {\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid,\n            })\n        }\n        // 3. setState of inventory component to reflect the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid,\n        })\n        console.log(authData)\n    }\n\n    authenticate = (provider) => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]()\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler)\n    }\n\n    logout = async () => {\n        console.log('Logging out!')\n        await firebase.auth().signOut()\n        this.setState({ uid: null })\n    }\n\n    render() {\n        const logout = <button onClick={this.logout}>Log Out!</button>\n        // 1. Check if thet are logged in\n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate} />\n        }\n        // 2. check if the uid === store owner\n        if (this.state.uid !== this.state.owner) {\n            return (\n                <div>\n                    <p>Sorry you are not the owner!</p>\n                    {logout}\n                </div>\n            )\n        }\n        // 3. They must be the owner, just render the inventory\n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map((key) => (\n                    <EditFishForm\n                        key={key}\n                        index={key}\n                        fish={this.props.fishes[key]}\n                        updateFish={this.props.updateFish}\n                        deleteFish={this.props.deleteFish}\n                    />\n                ))}\n                <AddFishForm addFish={this.props.addFish} />\n                <button onClick={this.props.loadSampleFishes}>\n                    Load Sample Fishes\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default Inventory\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc: \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\",\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc: \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\",\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc: \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\",\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc: \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\",\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc: \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\",\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc: \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\",\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\",\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc: \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\",\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc: \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\",\n  },\n};\n\nexport default fishes;\n","import React from 'react'\nimport { formatPrice } from '../helpers'\nimport PropTypes from 'prop-types'\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number,\n        }),\n        addToOrder: PropTypes.func,\n    }\n    handleClick = () => {\n        this.props.addToOrder(this.props.index)\n    }\n    render() {\n        const { image, name, price, desc, status } = this.props.details\n        const isAvailable = status === 'available'\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name} />\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button disabled={!isAvailable} onClick={this.handleClick}>\n                    {isAvailable ? 'Add to Order' : 'Sold Out'}\n                </button>\n            </li>\n        )\n    }\n}\n\nexport default Fish\n","import React from 'react'\nimport Header from './Header'\nimport Order from './Order'\nimport Inventory from './Inventory'\nimport sampleFishes from '../sample-fishes'\nimport Fish from './Fish'\nimport base from '../base'\nimport PropTypes from 'prop-types'\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {},\n    }\n\n    static propTypes = {\n        match: PropTypes.object,\n    }\n\n    componentDidMount() {\n        const { params } = this.props.match\n        // first reinstate our localStorage.\n        const localStorageRef = localStorage.getItem(params.storeId)\n        if (localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) })\n        }\n\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes',\n        })\n    }\n\n    componentDidUpdate() {\n        console.log(this.state.order)\n        localStorage.setItem(\n            this.props.match.params.storeId,\n            JSON.stringify(this.state.order)\n        )\n    }\n\n    componentWillunmount() {\n        base.removeBiding(this.ref)\n    }\n\n    addFish = (fish) => {\n        // 1. take a copy of the existing state\n        const fishes = { ...this.state.fishes }\n        // 2. Add our new fish to that fishes variable\n        fishes[`fish${Date.now()}`] = fish\n        // 3. set the new fishes object to state\n        this.setState({ fishes })\n    }\n\n    updateFish = (key, updatedFish) => {\n        // 1. Take a copy of current state\n        const fishes = { ...this.state.fishes }\n        // 2. Update that state\n        fishes[key] = updatedFish\n        // 3. set that to state\n        this.setState({ fishes })\n    }\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes })\n    }\n\n    deleteFish = (key) => {\n        // 1- Take a copy of state\n        const fishes = { ...this.state.fishes }\n        // 2. Update that state\n        fishes[key] = null\n        // update state\n        this.setState({ fishes })\n    }\n    addToOrder = (key) => {\n        // 1. Take a copy of State\n        const order = { ...this.state.order }\n        // 2. Add to the order or update the order\n        order[key] = order[key] + 1 || 1\n        // 3. call state to update our state object\n        this.setState({ order })\n    }\n    removeFromOrder = (key) => {\n        const order = { ...this.state.order }\n        delete order[key]\n        // 3. call state to update our state object\n        this.setState({ order })\n    }\n    render() {\n        console.log('fishes in render', this.state.fishes)\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline={'Fresh Seafood Market'} />\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map((key) => (\n                            <Fish\n                                key={key}\n                                index={key}\n                                details={this.state.fishes[key]}\n                                addToOrder={this.addToOrder}\n                            />\n                        ))}\n                    </ul>\n                </div>\n                <Order\n                    fishes={this.state.fishes}\n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                />\n                <Inventory\n                    addFish={this.addFish}\n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport NotFound from \"./NotFound\";\nimport App from \"./App\"\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker}/>\n      <Route path=\"/store/:storeId\" component={App}/>\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\"\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}